AWSTemplateFormatVersion: "2010-09-09"
Description: Template generated by rain

Parameters:
  ServiceName:
    Type: String
    Default: switch_plus
    Description: Enter service name

  Env:
    Type: String
    Default: stg
    AllowedValues:
      - stg
      - prod
    Description: Enter stg or prod

Conditions:
  IsProd: !Equals [!Ref Env, 'prod']

Resources:
  AdminECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub '${Env}-admin'
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-admin'

  AdminService:
    Type: AWS::ECS::Service
    DependsOn: AdminALBListener
    Properties:
      LaunchType: FARGATE
      TaskDefinition: !Ref AdminTaskDefinition
      PlatformVersion: 1.4.0
      Cluster: !Ref AdminECSCluster
      ServiceName: !Sub '${Env}-admin'
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: !Sub '${Env}-admin'
          ContainerPort: 80
          TargetGroupArn: !Ref AdminALBTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue: !Sub '${Env}-SecGroupECSBefore'
            - Fn::ImportValue: !Sub '${Env}-SecGroupECSAfter'
          Subnets:
            - Fn::ImportValue: !Sub '${Env}-ECSPrivateSubnetA'
            - Fn::ImportValue: !Sub '${Env}-ECSPrivateSubnetB'
      EnableECSManagedTags: true
      EnableExecuteCommand: true
      HealthCheckGracePeriodSeconds: 60

  AdminTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: arn:aws:iam::176282227532:role/ECSTaskExecutionRole
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Sub '${Env}-admin'
          Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Env}-cw-admin-admin'
          Memory: 256
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
          Essential: true
          EnvironmentFiles:
            - Type: s3
              Value: !Sub 'arn:aws:s3:::switch-plus/env/${Env}/cw-imedia-admin/.env'

  AdminLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Name: !Sub '${Env}-admin'
      Scheme: internet-facing
      IpAddressType: ipv4
      Subnets:
        - Fn::ImportValue: !Sub '${Env}-PublicSubnetA'
        - Fn::ImportValue: !Sub '${Env}-PublicSubnetB'
      SecurityGroups:
        - Fn::ImportValue: !Sub '${Env}-AdminSecGroupAlb'
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-admin'

  AdminALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: AdminLoadBalancer
    Properties:
      TargetType: ip
      Name: !Sub '${Env}-admin'
      Protocol: HTTP
      Port: 80
      IpAddressType: ipv4
      VpcId: 
        Fn::ImportValue: !Sub '${Env}-VpcId'
      HealthCheckEnabled: true
      HealthCheckProtocol: HTTP
      HealthCheckPort: 80
      HealthCheckPath: /favicon.ico
      HealthCheckIntervalSeconds: 60
      HealthCheckTimeoutSeconds: 6
      HealthyThresholdCount: 5

  AdminALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref AdminLoadBalancer
      Certificates:
        - CertificateArn: arn:aws:acm:ap-northeast-1:176282227532:certificate/aa91ee9b-15fb-49b5-9155-52f3c3900e86
      Protocol: HTTPS
      Port: 443
      DefaultActions:
        - TargetGroupArn: !Ref AdminALBTargetGroup
          Type: forward

  DomainAssociateToAdminALB:
     Type: AWS::Route53::RecordSet
     Properties:
       HostedZoneId: !If [IsProd, 'Z036337037KTOWDNZ1RJI', 'Z0363373389CV7HGT8KCM']
       Name: !If [IsProd, 'admin.switch-plus.jp', 'admin.stg.switch-plus.jp']
       Type: A
       AliasTarget:
         DNSName: !GetAtt AdminLoadBalancer.DNSName
         HostedZoneId: !GetAtt AdminLoadBalancer.CanonicalHostedZoneID

