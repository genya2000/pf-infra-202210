AWSTemplateFormatVersion: "2010-09-09"
Description: Template generated by rain

Parameters:
  ServiceName:
    Type: String
    Default: switch_plus
    Description: Enter service name

  Env:
    Type: String
    Default: stg
    AllowedValues:
      - stg
      - prod
    Description: Enter stg or prod

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub '${Env}-content'
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-content'

  ContentService:
    Type: AWS::ECS::Service
    Properties:
      LaunchType: FARGATE
      TaskDefinition: !Ref ContentTaskDefinition
      PlatformVersion: 1.4.0
      Cluster: !Ref ECSCluster
      ServiceName: !Sub '${Env}-content'
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: !Sub '${Env}-content'
          ContainerPort: 80
          TargetGroupArn: !Ref ALBTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue SecGroupECSBefore
            - !ImportValue SecGroupECSAfter
          Subnets:
            - !ImportValue ECSPrivateSubnetA
            - !ImportValue ECSPrivateSubnetB
      EnableECSManagedTags: true
      EnableExecuteCommand: true
      HealthCheckGracePeriodSeconds: 60

  ContentTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !ImportValue ECSTaskExecutionRole
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Sub '${Env}-content'
          Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Env}-cw-imedia-api'
          Memory: 256
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
            - ContainerPort: 443
              HostPort: 443
              Protocol: tcp
          Essential: true
          EnvironmentFile:
            Type: s3
            Value: !Sub 'arn:aws:s3:::switch-plus/${Env}/cw-imedia-api/.env'
            # LogConfiguration:
            #   LogDriver: awslogs
            #   Options:


        # mackerelコンテナ定義
          # - Name: stg-imedia-mackerel-agent
          #   Image: mackerel/mackerel-container-agent:latest
          #   Cpu: 256
          #   Memory: 128
          #   DisableNetworking: true
          #   DependsOn:
          #     - Condition: COMPLETE
          #       ContainerName: stg-imedia-content
          #   Environment:
          #     - Name: ACKEREL_CONTAINER_PLATFORM
          #       Value: ecs_v3
          #     - Name: MACKEREL_APIKEY
          #       Value: # TODO API_KEY
          #   Essential: false
      TaskRoleArn: !ImportValue ECSServiceTaskRoleForExecAccessToECS
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-taskdefinition'

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Name: !Sub '${Env}-content'
      Scheme: internet-facing
      IpAddressType: ipv4
      Subnets:
        - !ImportValue PublicSubnetA
        - !ImportValue PublicSubnetB
      SecurityGroups:
        - !ImportValue SecGroupAlb
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-content'

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LoadBalancer
    Properties:
      TargetType: ip
      Name: !Sub '${Env}-content'
      Protocol: HTTP
      Port: 80
      IpAddressType: ipv4
      VpcId: !ImportValue VpcId
      HealthCheckEnabled: true
      HealthCheckProtocol: HTTP
      HealthCheckPort: 80
      HealthCheckPath: /favicon.ico
      HealthCheckIntervalSeconds: 60
      HealthCheckTimeoutSeconds: 6
      HealthyThresholdCount: 5

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward

