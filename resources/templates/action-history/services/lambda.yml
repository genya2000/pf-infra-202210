AWSTemplateFormatVersion: 2010-09-09
Description: API Gateway Template for Action History

Parameters:
  ServiceName:
    Type: String
    Default: switch_plus
    Description: Enter service name

  Env:
    Type: String
    Default: stg
    AllowedValues:
      - stg
      - prod
    Description: Enter stg or prod
  ActionHistory001ApiGateway2SqsRole:
    Type: String
    Description: The shared value will be passed to this parameter by parent stack.
  ActionHistory002Sqs2DynamoDBRole:
    Type: String
    Description: The shared value will be passed to this parameter by parent stack.
  ActionHistorySaveDynamodbQueue:
    Type: String
    Description: The shared value will be passed to this parameter by parent stack.
  ActionHistorySaveDynamodbQueueName:
    Type: String
    Description: The shared value will be passed to this parameter by parent stack.

Conditions:
  IsStg: !Equals [!Ref Env, 'stg']

Resources:
  ActionHistory001ApiGateway2SqsLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: switch-plus-infra
        S3Key: resources/templates/action-history/services/lambda/001_agw2sqs/lambda_function.zip
      Environment:
        Variables:
          queueName: !Ref ActionHistorySaveDynamodbQueueName
      FunctionName: !Sub ${Env}-${ServiceName}-action-history-001-agw2sqs
      Handler: lambda_function.lambda_handler
      Role: !Ref ActionHistory001ApiGateway2SqsRole
      Runtime: python3.9
      Description: Send message to SQS from APIGateway for action history.
  ActionHistory001ApiGateway2SqsLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub ${ActionHistory001ApiGateway2SqsLambda}
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
  ActionHistory001ApiGateway2SqsLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${ActionHistory001ApiGateway2SqsLambda}
      RetentionInDays: 14
  ActionHistory002Sqs2DynamoDBLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: switch-plus-infra
        S3Key: resources/templates/action-history/services/lambda/002_sqs2dynamodb/lambda_function.zip
      Environment:
        Variables:
          queueName: !Ref ActionHistorySaveDynamodbQueueName
          dynamodbTableName: !Sub ${Env}-${ServiceName}-action-history
      FunctionName: !Sub ${Env}-${ServiceName}-action-history-002-sqs2dynamodb
      Handler: lambda_function.lambda_handler
      Role: !Ref ActionHistory002Sqs2DynamoDBRole
      Runtime: python3.9
      Description: Send message to SQS from APIGateway for action history.
  ActionHistory002Sqs2DynamoDBLambdaEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !Ref ActionHistorySaveDynamodbQueue
      FunctionName: !GetAtt ActionHistory002Sqs2DynamoDBLambda.Arn
  ActionHistory002Sqs2DynamoDBLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${ActionHistory002Sqs2DynamoDBLambda}
      RetentionInDays: 14

Outputs:
  ActionHistory001ApiGateway2SqsLambda:
    Value: !GetAtt ActionHistory001ApiGateway2SqsLambda.Arn
    Export:
      Name: ActionHistory001ApiGateway2SqsLambda
