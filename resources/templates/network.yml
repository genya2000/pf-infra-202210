AWSTemplateFormatVersion: 2010-09-09
Description: Network Layer Template

Parameters:
  ServiceName:
    Type: String
    Default: switch_plus
    Description: Enter service name

  Env:
    Type: String
    Default: stg
    AllowedValues:
      - stg
      - prod
    Description: Enter stg or prod


Resources:
  #####  VPCの作成 #####
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-vpc'

  ##### インターネットゲートウェイの作成 #####
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-igw'

  ##### インターネットゲートウェイをVPCにアタッチ #####
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  ##### サブネットの作成 #####
  DBPrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref Vpc
      CidrBlock: 10.0.5.0/24
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-db-private-subnet-A'

  DBPrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref Vpc
      CidrBlock: 10.0.6.0/24
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-db-private-subnet-B'

  ECSPrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref Vpc
      CidrBlock: 10.0.7.0/24
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-ecs-private-subnet-A'

  ECSPrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref Vpc
      CidrBlock: 10.0.8.0/24
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-ecs-private-subnet-B'

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref Vpc
      CidrBlock: 10.0.9.0/24
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-public-subnet-A'

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      VpcId: !Ref Vpc
      CidrBlock: 10.0.10.0/24
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-public-subnet-B'


  ##### ルートテーブルの作成 #####
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-private-routetable'

  PublicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-public-routetable-A'

  PublicRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-public-routetable-B'


  ##### インターネットゲートウェイルートの作成 #####
  PublicRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicRouteB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway


  ##### サブネットをルートテーブルに関連付け #####
  RouteTableAssocDBPrivateSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DBPrivateSubnetA
      RouteTableId: !Ref PrivateRouteTable

  RouteTableAssocDBPrivateSubnetB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DBPrivateSubnetB
      RouteTableId: !Ref PrivateRouteTable

  RouteTableAssocECSPrivateSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ECSPrivateSubnetA
      RouteTableId: !Ref PrivateRouteTable

  RouteTableAssocECSPrivateSubnetB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ECSPrivateSubnetB
      RouteTableId: !Ref PrivateRouteTable

  RouteTableAssocPublicSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTableA

  RouteTableAssocPublicSubnetB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTableB


  ##### NAGゲートウェイ用EIPの作成 #####
  EIPA:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-eip-a'

            #  EIPB:
            #    Type: AWS::EC2::EIP
            #    DependsOn: AttachGateway
            #    Properties:
            #      Domain: vpc
            #      Tags:
            #        - Key: Name
            #          Value: !Sub '${Env}-${ServiceName}-eip-b'

  ##### NATゲートウェイの作成 #####
  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPA.AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: !Sub '${Env}-${ServiceName}-nat-a'

            #  NatGatewayB:
            #    Type: AWS::EC2::NatGateway
            #    Properties:
            #      AllocationId: !GetAtt EIPB.AllocationId
            #      SubnetId: !Ref PublicSubnetB
            #      Tags:
            #        - Key: Name
            #          Value: !Sub '${Env}-${ServiceName}-nat-b'

  ##### NATゲートウェイルートを作成 #####
  NatGatewayRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA
      RouteTableId: !Ref PrivateRouteTable

        #  NatGatewayRouteB:
        #    Type: AWS::EC2::Route
        #    Properties:
        #      DestinationCidrBlock: 0.0.0.0/0
        #      NatGatewayId: !Ref NatGatewayB
        #      RouteTableId: !Ref PrivateRouteTable


Outputs:
  VpcId:
    Value: !Ref Vpc
    Export:
      Name: !Sub '${Env}-VpcId'
  DBPrivateSubnetA:
    Value: !Ref DBPrivateSubnetA
    Export:
      Name: !Sub '${Env}-DBPrivateSubnetA'
  DBPrivateSubnetB:
    Value: !Ref DBPrivateSubnetB
    Export:
      Name: !Sub '${Env}-DBPrivateSubnetB'
  ECSPrivateSubnetA:
    Value: !Ref ECSPrivateSubnetA
    Export:
      Name: !Sub '${Env}-ECSPrivateSubnetA'
  ECSPrivateSubnetB:
    Value: !Ref ECSPrivateSubnetB
    Export:
      Name: !Sub '${Env}-ECSPrivateSubnetB'
  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub '${Env}-PublicSubnetA'
  PublicSubnetB:
    Value: !Ref PublicSubnetB
    Export:
      Name: !Sub '${Env}-PublicSubnetB'
